# .autotest
PLATFORM = RUBY_PLATFORM unless defined? PLATFORM
#require 'autotest/growl'
#require 'redgreen/autotest'
# require 'redgreen'
require 'autotest/fsevent'
require 'autotest/restart'
require 'autotest/timestamp'

require '~/.sound/sound.rb'
Autotest::Sound.sound_path = "~/.sound/sound_fx/"

# Autotest::Growl::show_modified_files = true

Autotest.add_hook :initialize do |at|
  %w{.git .svn .hg .DS_Store ._* log zip coverage solr}.each {|exception|at.add_exception(exception)}
  # at.add_mapping(%r{^lib/.*\.rb$}) { |f, _| Dir['spec/**/*_spec.rb'] }
end

Autotest.add_hook :reset do |at|
  at.clear_mappings
  at.add_mapping(/^(.*?)(_test)?\.rb$/) { |filename, m| m[2] ? filename : "#{m[1]}_test.rb" }
  at.add_mapping(/^(.*?)(_spec)?\.rb$/) { |filename, m| m[2] ? filename : "#{m[1]}_spec.rb" }
  at.add_mapping(%r%^*(lib)/.*rb$%, true) {
    at.files_matching %r%^test/.*_test.rb$%
  }
  # Now add support for the test files themselves
  at.add_mapping(%r%^test/(.*)/(.*)\.rb$%) do |file, m|
    at.files_matching %r%#{file}%
  end
end

Autotest.options.tap do |o|
  o[:no_full_after_start] = true
  o[:no_full_after_failed] = true
end

#Autotest.add_hook :all_good do
#  system("type say &>/dev/null && say 'Fuck yeah!'")
#end

Autotest.send(:alias_method, :real_make_test_cmd, :make_test_cmd)
Autotest.send(:define_method, :make_test_cmd) do |*args|
  real_make_test_cmd(*args).sub('test/unit', %[rubygems -e "require 'redgreen'"])
end
